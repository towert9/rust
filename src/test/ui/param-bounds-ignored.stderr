warning: bounds on generic parameters are ignored in type aliases
  --> $DIR/param-bounds-ignored.rs:16:1
   |
16 | type SVec<T: Send> = Vec<T>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(ignored_generic_bounds)] on by default

warning: bounds on generic parameters are ignored in type aliases
  --> $DIR/param-bounds-ignored.rs:17:1
   |
17 | type VVec<'b, 'a: 'b> = Vec<&'a i32>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in type aliases
  --> $DIR/param-bounds-ignored.rs:18:1
   |
18 | type WVec<'b, T: 'b> = Vec<T>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: where clauses are ignored in trait bounds
  --> $DIR/param-bounds-ignored.rs:19:1
   |
19 | type W2Vec<'b, T> where T: 'b = Vec<T>;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked function types (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:39:8
   |
39 |     f: for<'xa, 'xb: 'xa> fn(&'xa i32, &'xb i32) -> &'xa i32)
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:46:20
   |
46 | fn bar2<'a, 'b, F: for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32>(
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:60:14
   |
60 |     where F: for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:71:11
   |
71 |     where for<'xa, 'xb: 'xa> F: Fn(&'xa i32, &'xb i32) -> &'xa i32
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:78:14
   |
78 | struct S1<F: for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32>(F);
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:79:26
   |
79 | struct S2<F>(F) where F: for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32;
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:80:23
   |
80 | struct S3<F>(F) where for<'xa, 'xb: 'xa> F: Fn(&'xa i32, &'xb i32) -> &'xa i32;
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked function types (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:82:15
   |
82 | struct S_fnty(for<'xa, 'xb: 'xa> fn(&'xa i32, &'xb i32) -> &'xa i32);
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:84:15
   |
84 | type T1 = Box<for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32>;
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked function types (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:87:20
   |
87 |     let _ : Option<for<'xa, 'xb: 'xa> fn(&'xa i32, &'xb i32) -> &'xa i32> = None;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: bounds on generic parameters are ignored in higher-ranked trait bounds (i.e., `for`)
  --> $DIR/param-bounds-ignored.rs:88:24
   |
88 |     let _ : Option<Box<for<'xa, 'xb: 'xa> Fn(&'xa i32, &'xb i32) -> &'xa i32>> = None;
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

